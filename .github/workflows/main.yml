name: 'Terraform Apply OKE Cluster'

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out your repository's Terraform code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Install the Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Step 3: Create a temporary file on the runner for the private key.
      # This reads the key content from the secret and writes it to a file,
      # allowing us to pass its path to the `private_key_path` variable.
      - name: Create OCI private key file
        run: echo "${{ secrets.OCI_PRIVATE_KEY }}" > /tmp/oci_api_key.pem

      # Step 4: Run Terraform Init to prepare the environment
      - name: Terraform Init
        id: init
        run: terraform init

      # Step 5: Run Terraform Apply
      # This step securely passes the GitHub Secrets as environment variables.
      # Terraform automatically uses environment variables prefixed with `TF_VAR_`
      # to populate the corresponding variables in your .tf file.
      - name: Terraform Apply
        id: apply
        env:
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key_path: /tmp/oci_api_key.pem
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}
          # The 'region' and 'k8s_version' variables will use their default values from main.tf
        run: terraform apply -auto-approve

