# FILE: .github/workflows/deploy-oke.yml

name: 'Deploy OKE Infrastructure'

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v3

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v2

      # This step securely writes the private key from secrets to a temporary file.
      # This file is now used by both the backend and the provider.
      - name: 'Write OCI private key to file'
        run: |
          echo "${{ secrets.OCI_PRIVATE_KEY }}" > /tmp/oci_api_key.pem
          chmod 600 /tmp/oci_api_key.pem

      # This 'terraform init' step now provides all backend configuration,
      # including authentication, directly via command-line flags.
      # This makes the backend independent of OCI_CLI environment variables.
      - name: 'Terraform Init'
        id: init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.OCI_STATE_BUCKET }}" \
            -backend-config="namespace=${{ secrets.OCI_TENANCY_NAMESPACE }}" \
            -backend-config="key=oke-cluster/terraform.tfstate" \
            -backend-config="region=${{ secrets.OCI_REGION }}" \
            -backend-config="tenancy_ocid=${{ secrets.OCI_TENANCY_OCID }}" \
            -backend-config="user_ocid=${{ secrets.OCI_USER_OCID }}" \
            -backend-config="fingerprint=${{ secrets.OCI_FINGERPRINT }}" \
            -backend-config="private_key_path=/tmp/oci_api_key.pem"

      # This step remains unchanged. The 'apply' step still needs these
      # environment variables to configure the OCI *provider*, which is separate
      # from the backend.
      - name: 'Terraform Apply'
        id: apply
        env:
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key_path: /tmp/oci_api_key.pem
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}
          TF_VAR_region: ${{ secrets.OCI_REGION }}
          TF_VAR_node_image_ocid: ${{ secrets.OCI_NODE_IMAGE_OCID }}
        run: terraform apply -auto-approve
