name: Build, Push to OCIR, and Deploy to OKE

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup OCI CLI
        # Using a specific, stable version of the action to resolve the error
        uses: oracle-actions/setup-oci-cli@v1.2
        with:
          tenancy: ${{ secrets.OCI_TENANCY_OCID }}
          user: ${{ secrets.OCI_USER_OCID }}
          fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          key: ${{ secrets.OCI_PRIVATE_KEY }}
          region: ${{ secrets.OCI_REGION }}

      - name: Login to OCIR
        uses: oracle-actions/login-ocir@v1
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Build, tag, and push image to OCIR
        id: build-image
        run: |
          # Use your tenancy's namespace for the repository path
          # You can find this under OCIR -> Settings
          NAMESPACE=$(oci os ns get --raw-output | jq -r .data)
          IMAGE_NAME="ktor-oke-app"
          IMAGE_TAG="latest"
          OCIR_URL="${{ secrets.OCI_REGION }}.ocir.io/${NAMESPACE}/${IMAGE_NAME}:${IMAGE_TAG}"
          docker build -t $OCIR_URL .
          docker push $OCIR_URL
          echo "image_url=$OCIR_URL" >> $GITHUB_OUTPUT

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        id: terraform
        run: terraform apply -auto-approve -var="docker_image=${{ steps.build-image.outputs.image_url }}" -var="node_image_ocid=${{ secrets.OCI_NODE_IMAGE_OCID }}"


