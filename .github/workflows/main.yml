name: Build and Deploy to OKE

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      # Map GitHub Secrets to environment variables for Terraform and OCI tools.
      OCI_CLI_TENANCY: ${{ secrets.OCI_TENANCY_OCID }}
      OCI_CLI_USER: ${{ secrets.OCI_USER_OCID }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_PRIVATE_KEY }}
      OCI_CLI_REGION: ${{ secrets.OCI_REGION }}
      TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
      TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
      TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
      TF_VAR_region: ${{ secrets.OCI_REGION }}
      TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}
      TF_VAR_node_image_ocid: ${{ secrets.OCI_NODE_IMAGE_OCID }}

    steps:
      # 1. SETUP AND BUILD PHASE
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get or create an OCIR Repository
        id: get-ocir-repository
        uses: oracle-actions/get-ocir-repository@v1.3.0
        with:
          name: ktor-oke-app
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.3.0
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '8.5'
          arguments: shadowJar

      - name: Build and Push Docker Image
        id: build-image
        run: |
          IMAGE_TAG=$GITHUB_SHA
          IMAGE_URL="${{ steps.get-ocir-repository.outputs.repo_path }}:$IMAGE_TAG"
          docker build -t $IMAGE_URL .
          docker push $IMAGE_URL
          echo "image_url=$IMAGE_URL" >> $GITHUB_OUTPUT

      # 2. DEPLOYMENT PHASE (NOW SIMPLIFIED)
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Write OCI private key to file
        # The OCI provider needs the private key to be in a file.
        run: |
          echo "${{ secrets.OCI_PRIVATE_KEY }}" > oci_api_key.pem
          echo "TF_VAR_private_key_path=$(pwd)/oci_api_key.pem" >> $GITHUB_ENV

      - name: Terraform Init
        # Initializes the backend and downloads providers.
        run: terraform init

      - name: Terraform Apply
        # A single, clean apply command. The complexity is handled by Terraform.
        run: |
          terraform apply -auto-approve \
            -var="docker_image=${{ steps.build-image.outputs.image_url }}" \
            -var="tenancy_namespace=${{ steps.get-ocir-repository.outputs.namespace }}"
